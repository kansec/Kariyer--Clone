// <auto-generated />
using System;
using KariyerClone.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KariyerClone.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220701102009_Added-Identity-Tables")]
    partial class AddedIdentityTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KariyerClone.Models.ApiUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("KariyerClone.Models.ApplicantCriterias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DrivingLicense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilitaryStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicantCriterias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DrivingLicense = "B",
                            EducationLevel = "Bachelor",
                            MilitaryStatus = "Done"
                        },
                        new
                        {
                            Id = 2,
                            DrivingLicense = "B",
                            EducationLevel = "Master"
                        },
                        new
                        {
                            Id = 3,
                            DrivingLicense = "B",
                            EducationLevel = "PHD",
                            MilitaryStatus = "Done"
                        },
                        new
                        {
                            Id = 4,
                            EducationLevel = "Master"
                        },
                        new
                        {
                            Id = 5,
                            MilitaryStatus = "Done"
                        });
                });

            modelBuilder.Entity("KariyerClone.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FoundationYear")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<string>("Sector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "California",
                            Description = "Google LLC is an American multinational technology company that focuses on artificial intelligence, search engine technology, online advertising, cloud computing, computer software, quantum computing, e-commerce, and consumer electronics.",
                            FoundationYear = 1998,
                            Logo = "https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/800px-Google_%22G%22_Logo.svg.png",
                            Name = "Google",
                            NumberOfEmployees = 300000,
                            Sector = "IT",
                            Website = "https://www.google.com/"
                        },
                        new
                        {
                            Id = 2,
                            Address = "California",
                            Description = "The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate headquartered at the Walt Disney Studios complex in Burbank, California.",
                            FoundationYear = 1923,
                            Logo = "https://frpnet.net/wp-content/uploads/2018/11/Disney-logo-1.jpg",
                            Name = "Disney",
                            NumberOfEmployees = 200000,
                            Sector = "Media",
                            Website = "https://thewaltdisneycompany.com/"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Leiden",
                            Description = "Airbus SE is a European multinational aerospace corporation. Airbus designs, manufactures and sells civil and military aerospace products worldwide and manufactures aircraft in Europe and various countries outside Europe.",
                            FoundationYear = 1970,
                            Logo = "https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Logo_Airbus_2014.svg/2560px-Logo_Airbus_2014.svg.png",
                            Name = "AIRBUS",
                            NumberOfEmployees = 100000,
                            Sector = "Aerospace",
                            Website = "https://www.airbus.com/en"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Tokyo",
                            Description = "FromSoftware, Inc. is a Japanese video game development company founded in November 1986 and a subsidiary of Kadokawa Corporation. The company is best known for their Armored Core and Souls series, including the related games Bloodborne, Sekiro, and Elden Ring.",
                            FoundationYear = 1986,
                            Logo = "https://d1yjjnpx0p53s8.cloudfront.net/styles/logo-thumbnail/s3/012011/from_soft.png?itok=EA5zFilD",
                            Name = "From Software",
                            NumberOfEmployees = 9877,
                            Sector = "IT",
                            Website = "https://www.fromsoftware.jp/ww/"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Istanbul",
                            Description = "Peak Games is a mobile gaming company based in Istanbul, Turkey. The privately-held company was acquired by Zynga in June 2020 for $1.8 billion. The company launched the games Toy Blast in 2015 and Toon Blast in 2017, both collectively have more than 12 million average mobile daily active users as of June 2020.",
                            FoundationYear = 2010,
                            Logo = "https://peakweb.global.ssl.fastly.net/static/assets/icons/logo-header-180-90.b348ab1a.png",
                            Name = "Peak",
                            NumberOfEmployees = 3213,
                            Sector = "IT",
                            Website = "https://peak.com/"
                        });
                });

            modelBuilder.Entity("KariyerClone.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicantCriteriasId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfWork")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantCriteriasId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicantCriteriasId = 4,
                            City = "Istanbul",
                            ClosingDate = new DateTime(2022, 8, 9, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4137),
                            CompanyId = 1,
                            Department = "Finance",
                            Description = "Job Description1",
                            PositionLevel = "Manager",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4124),
                            Title = "Finance Specialist",
                            TypeOfWork = "Contract-Based"
                        },
                        new
                        {
                            Id = 2,
                            ApplicantCriteriasId = 1,
                            City = "Dubai",
                            ClosingDate = new DateTime(2022, 7, 11, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4178),
                            CompanyId = 4,
                            Department = "Human Resources",
                            Description = "Job Description2",
                            PositionLevel = "Principal",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4177),
                            Title = "Human Resource Specialist",
                            TypeOfWork = "Contract-Based"
                        },
                        new
                        {
                            Id = 3,
                            ApplicantCriteriasId = 3,
                            City = "Adana",
                            ClosingDate = new DateTime(2022, 8, 9, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4181),
                            CompanyId = 4,
                            Department = "IT",
                            Description = "Job Description3",
                            PositionLevel = "Senior",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4181),
                            Title = "Developer",
                            TypeOfWork = "Part-time"
                        },
                        new
                        {
                            Id = 4,
                            ApplicantCriteriasId = 4,
                            City = "Bangkok",
                            ClosingDate = new DateTime(2022, 7, 27, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4185),
                            CompanyId = 2,
                            Department = "Human Resources",
                            Description = "Job Description4",
                            PositionLevel = "Junior",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4184),
                            Title = "Human Resource Specialist",
                            TypeOfWork = "Part-time"
                        },
                        new
                        {
                            Id = 5,
                            ApplicantCriteriasId = 3,
                            City = "Adana",
                            ClosingDate = new DateTime(2022, 7, 23, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4188),
                            CompanyId = 4,
                            Department = "IT",
                            Description = "Job Description5",
                            PositionLevel = "Manager",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4188),
                            Title = "Developer",
                            TypeOfWork = "Full-time"
                        },
                        new
                        {
                            Id = 6,
                            ApplicantCriteriasId = 2,
                            City = "Tokyo",
                            ClosingDate = new DateTime(2022, 7, 12, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4193),
                            CompanyId = 1,
                            Department = "Sales",
                            Description = "Job Description6",
                            PositionLevel = "Junior",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4193),
                            Title = "Salesman",
                            TypeOfWork = "Full-time"
                        },
                        new
                        {
                            Id = 7,
                            ApplicantCriteriasId = 4,
                            City = "Istanbul",
                            ClosingDate = new DateTime(2022, 8, 9, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4197),
                            CompanyId = 3,
                            Department = "Sales",
                            Description = "Job Description7",
                            PositionLevel = "Principal",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4196),
                            Title = "Salesman",
                            TypeOfWork = "Part-time"
                        },
                        new
                        {
                            Id = 8,
                            ApplicantCriteriasId = 1,
                            City = "Adana",
                            ClosingDate = new DateTime(2022, 8, 7, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4200),
                            CompanyId = 4,
                            Department = "Finance",
                            Description = "Job Description8",
                            PositionLevel = "Junior",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4200),
                            Title = "Finance Specialist",
                            TypeOfWork = "Part-time"
                        },
                        new
                        {
                            Id = 9,
                            ApplicantCriteriasId = 1,
                            City = "Los Angeles",
                            ClosingDate = new DateTime(2022, 8, 24, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4204),
                            CompanyId = 5,
                            Department = "Sales",
                            Description = "Job Description9",
                            PositionLevel = "Junior",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4203),
                            Title = "Salesman",
                            TypeOfWork = "Part-time"
                        },
                        new
                        {
                            Id = 10,
                            ApplicantCriteriasId = 3,
                            City = "Istanbul",
                            ClosingDate = new DateTime(2022, 7, 8, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4208),
                            CompanyId = 5,
                            Department = "Finance",
                            Description = "Job Description10",
                            PositionLevel = "Manager",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4208),
                            Title = "Finance Specialist",
                            TypeOfWork = "Part-time"
                        },
                        new
                        {
                            Id = 11,
                            ApplicantCriteriasId = 3,
                            City = "Dubai",
                            ClosingDate = new DateTime(2022, 7, 31, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4212),
                            CompanyId = 5,
                            Department = "Human Resources",
                            Description = "Job Description11",
                            PositionLevel = "Junior",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4212),
                            Title = "Human Resource Specialist",
                            TypeOfWork = "Part-time"
                        },
                        new
                        {
                            Id = 12,
                            ApplicantCriteriasId = 1,
                            City = "Los Angeles",
                            ClosingDate = new DateTime(2022, 8, 17, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4216),
                            CompanyId = 2,
                            Department = "Finance",
                            Description = "Job Description12",
                            PositionLevel = "Manager",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4215),
                            Title = "Finance Specialist",
                            TypeOfWork = "Full-time"
                        },
                        new
                        {
                            Id = 13,
                            ApplicantCriteriasId = 1,
                            City = "Istanbul",
                            ClosingDate = new DateTime(2022, 7, 14, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4219),
                            CompanyId = 4,
                            Department = "Finance",
                            Description = "Job Description13",
                            PositionLevel = "Senior",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4218),
                            Title = "Finance Specialist",
                            TypeOfWork = "Contract-Based"
                        },
                        new
                        {
                            Id = 14,
                            ApplicantCriteriasId = 1,
                            City = "Istanbul",
                            ClosingDate = new DateTime(2022, 8, 3, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4222),
                            CompanyId = 4,
                            Department = "IT",
                            Description = "Job Description14",
                            PositionLevel = "Senior",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4222),
                            Title = "Developer",
                            TypeOfWork = "Full-time"
                        },
                        new
                        {
                            Id = 15,
                            ApplicantCriteriasId = 4,
                            City = "Adana",
                            ClosingDate = new DateTime(2022, 8, 17, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4226),
                            CompanyId = 1,
                            Department = "IT",
                            Description = "Job Description15",
                            PositionLevel = "Principal",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4225),
                            Title = "Developer",
                            TypeOfWork = "Full-time"
                        },
                        new
                        {
                            Id = 16,
                            ApplicantCriteriasId = 3,
                            City = "Bangkok",
                            ClosingDate = new DateTime(2022, 7, 29, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4229),
                            CompanyId = 4,
                            Department = "IT",
                            Description = "Job Description16",
                            PositionLevel = "Principal",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4228),
                            Title = "Developer",
                            TypeOfWork = "Part-time"
                        },
                        new
                        {
                            Id = 17,
                            ApplicantCriteriasId = 2,
                            City = "Adana",
                            ClosingDate = new DateTime(2022, 8, 24, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4232),
                            CompanyId = 5,
                            Department = "Sales",
                            Description = "Job Description17",
                            PositionLevel = "Principal",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4232),
                            Title = "Salesman",
                            TypeOfWork = "Contract-Based"
                        },
                        new
                        {
                            Id = 18,
                            ApplicantCriteriasId = 1,
                            City = "Dubai",
                            ClosingDate = new DateTime(2022, 7, 12, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4237),
                            CompanyId = 5,
                            Department = "IT",
                            Description = "Job Description18",
                            PositionLevel = "Senior",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4236),
                            Title = "Developer",
                            TypeOfWork = "Part-time"
                        },
                        new
                        {
                            Id = 19,
                            ApplicantCriteriasId = 3,
                            City = "Bangkok",
                            ClosingDate = new DateTime(2022, 8, 20, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4240),
                            CompanyId = 1,
                            Department = "Sales",
                            Description = "Job Description19",
                            PositionLevel = "Senior",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4239),
                            Title = "Salesman",
                            TypeOfWork = "Full-time"
                        },
                        new
                        {
                            Id = 20,
                            ApplicantCriteriasId = 2,
                            City = "Tokyo",
                            ClosingDate = new DateTime(2022, 7, 28, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4243),
                            CompanyId = 3,
                            Department = "Human Resources",
                            Description = "Job Description20",
                            PositionLevel = "Principal",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4242),
                            Title = "Human Resource Specialist",
                            TypeOfWork = "Full-time"
                        },
                        new
                        {
                            Id = 21,
                            ApplicantCriteriasId = 1,
                            City = "Adana",
                            ClosingDate = new DateTime(2022, 7, 26, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4246),
                            CompanyId = 5,
                            Department = "Sales",
                            Description = "Job Description21",
                            PositionLevel = "Manager",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4246),
                            Title = "Salesman",
                            TypeOfWork = "Contract-Based"
                        },
                        new
                        {
                            Id = 22,
                            ApplicantCriteriasId = 3,
                            City = "Bangkok",
                            ClosingDate = new DateTime(2022, 7, 12, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4249),
                            CompanyId = 3,
                            Department = "Human Resources",
                            Description = "Job Description22",
                            PositionLevel = "Principal",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4249),
                            Title = "Human Resource Specialist",
                            TypeOfWork = "Part-time"
                        },
                        new
                        {
                            Id = 23,
                            ApplicantCriteriasId = 1,
                            City = "Wuhan",
                            ClosingDate = new DateTime(2022, 7, 11, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4253),
                            CompanyId = 5,
                            Department = "Marketing",
                            Description = "Job Description23",
                            PositionLevel = "Manager",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4252),
                            Title = "Marketer",
                            TypeOfWork = "Contract-Based"
                        },
                        new
                        {
                            Id = 24,
                            ApplicantCriteriasId = 2,
                            City = "Bangkok",
                            ClosingDate = new DateTime(2022, 7, 30, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4256),
                            CompanyId = 5,
                            Department = "Sales",
                            Description = "Job Description24",
                            PositionLevel = "Principal",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4255),
                            Title = "Salesman",
                            TypeOfWork = "Part-time"
                        },
                        new
                        {
                            Id = 25,
                            ApplicantCriteriasId = 3,
                            City = "Bangkok",
                            ClosingDate = new DateTime(2022, 7, 29, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4259),
                            CompanyId = 1,
                            Department = "IT",
                            Description = "Job Description25",
                            PositionLevel = "Principal",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4259),
                            Title = "Developer",
                            TypeOfWork = "Full-time"
                        },
                        new
                        {
                            Id = 26,
                            ApplicantCriteriasId = 4,
                            City = "Dubai",
                            ClosingDate = new DateTime(2022, 8, 24, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4262),
                            CompanyId = 4,
                            Department = "Human Resources",
                            Description = "Job Description26",
                            PositionLevel = "Junior",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4262),
                            Title = "Human Resource Specialist",
                            TypeOfWork = "Contract-Based"
                        },
                        new
                        {
                            Id = 27,
                            ApplicantCriteriasId = 1,
                            City = "Dubai",
                            ClosingDate = new DateTime(2022, 8, 8, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4265),
                            CompanyId = 1,
                            Department = "Marketing",
                            Description = "Job Description27",
                            PositionLevel = "Principal",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4265),
                            Title = "Marketer",
                            TypeOfWork = "Part-time"
                        },
                        new
                        {
                            Id = 28,
                            ApplicantCriteriasId = 3,
                            City = "Istanbul",
                            ClosingDate = new DateTime(2022, 8, 6, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4268),
                            CompanyId = 5,
                            Department = "Marketing",
                            Description = "Job Description28",
                            PositionLevel = "Junior",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4268),
                            Title = "Marketer",
                            TypeOfWork = "Part-time"
                        },
                        new
                        {
                            Id = 29,
                            ApplicantCriteriasId = 2,
                            City = "Los Angeles",
                            ClosingDate = new DateTime(2022, 7, 16, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4271),
                            CompanyId = 4,
                            Department = "Marketing",
                            Description = "Job Description29",
                            PositionLevel = "Manager",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4271),
                            Title = "Marketer",
                            TypeOfWork = "Full-time"
                        },
                        new
                        {
                            Id = 30,
                            ApplicantCriteriasId = 1,
                            City = "Bangkok",
                            ClosingDate = new DateTime(2022, 7, 28, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4274),
                            CompanyId = 1,
                            Department = "Human Resources",
                            Description = "Job Description30",
                            PositionLevel = "Manager",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4274),
                            Title = "Human Resource Specialist",
                            TypeOfWork = "Full-time"
                        },
                        new
                        {
                            Id = 31,
                            ApplicantCriteriasId = 4,
                            City = "Tokyo",
                            ClosingDate = new DateTime(2022, 7, 31, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4278),
                            CompanyId = 5,
                            Department = "Finance",
                            Description = "Job Description31",
                            PositionLevel = "Principal",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4277),
                            Title = "Finance Specialist",
                            TypeOfWork = "Contract-Based"
                        },
                        new
                        {
                            Id = 32,
                            ApplicantCriteriasId = 4,
                            City = "Dubai",
                            ClosingDate = new DateTime(2022, 8, 15, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4281),
                            CompanyId = 3,
                            Department = "IT",
                            Description = "Job Description32",
                            PositionLevel = "Manager",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4281),
                            Title = "Developer",
                            TypeOfWork = "Contract-Based"
                        },
                        new
                        {
                            Id = 33,
                            ApplicantCriteriasId = 2,
                            City = "Los Angeles",
                            ClosingDate = new DateTime(2022, 7, 19, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4285),
                            CompanyId = 1,
                            Department = "Finance",
                            Description = "Job Description33",
                            PositionLevel = "Principal",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4284),
                            Title = "Finance Specialist",
                            TypeOfWork = "Part-time"
                        },
                        new
                        {
                            Id = 34,
                            ApplicantCriteriasId = 1,
                            City = "Dubai",
                            ClosingDate = new DateTime(2022, 8, 11, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4330),
                            CompanyId = 2,
                            Department = "Marketing",
                            Description = "Job Description34",
                            PositionLevel = "Junior",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4329),
                            Title = "Marketer",
                            TypeOfWork = "Full-time"
                        },
                        new
                        {
                            Id = 35,
                            ApplicantCriteriasId = 1,
                            City = "Wuhan",
                            ClosingDate = new DateTime(2022, 7, 6, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4333),
                            CompanyId = 5,
                            Department = "Finance",
                            Description = "Job Description35",
                            PositionLevel = "Manager",
                            PostingDate = new DateTime(2022, 7, 1, 13, 20, 8, 968, DateTimeKind.Local).AddTicks(4333),
                            Title = "Finance Specialist",
                            TypeOfWork = "Part-time"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("KariyerClone.Models.Job", b =>
                {
                    b.HasOne("KariyerClone.Models.ApplicantCriterias", "ApplicantCriterias")
                        .WithMany("Jobs")
                        .HasForeignKey("ApplicantCriteriasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KariyerClone.Models.Company", "Company")
                        .WithMany("Jobs")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicantCriterias");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("KariyerClone.Models.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("KariyerClone.Models.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KariyerClone.Models.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("KariyerClone.Models.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KariyerClone.Models.ApplicantCriterias", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("KariyerClone.Models.Company", b =>
                {
                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
